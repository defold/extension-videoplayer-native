
local function log(msg)
    print(msg)
    label.set_text("#label", msg)
end

local function video_callback(self, video, event, data)
    log(string.format("VIDEO CALLBACK: video %d evt: %d ", video, event))
    pprint(data)

    if event == videoplayer.VIDEO_EVENT_READY then
        videoplayer.start(video)
    end
end


function video_begin(self)
    if videoplayer then
        log("Loading...")
        self.video = videoplayer.create("cutscene_3.mp4", {}, video_callback)
    else
        log("Could not initialize fullscreen videoplayer (on this platform?)")
    end
end

function video_end(self)
    log("video_end")
    if self.video ~= nil then
        videoplayer.destroy(self.video)
    end
end

local function window_callback(self, event, data)
	if self.video == nil then
		return
	end

	if event == window.WINDOW_EVENT_FOCUS_LOST then
		videoplayer.pause(self.video)
	elseif event == window.WINDOW_EVENT_FOCUS_GAINED then
		videoplayer.start(self.video)
	end
end

function init(self)
    msg.post(".", "acquire_input_focus")
    self.video = nil
    self.tick = 1

    window.set_listener(window_callback)
end

function on_input(self, action_id, action)
    if action_id == hash("touch") and action.pressed then
        if self.video == nil then
            video_begin(self)
        else
            video_begin(self)
        end
    end
end
